---
import { Icon } from "astro-icon/components";

interface ContactItem {
  icon: string;
  title: string;
  content: string | string[];
  link?: string;
  linkText?: string;
}

interface Props {
  items: ContactItem[];
}

const { items } = Astro.props;
---

<div class="grid grid-cols-1 gap-6 md:grid-cols-2">
  {
    items.map((item) => (
      <div class="bg-base-100 transform rounded-lg p-6 shadow-md transition-all duration-300 hover:-translate-y-1 hover:shadow-lg">
        {/* Icon */}
        <div class="mb-4 flex justify-center">
          <div class="bg-primary/10 text-primary-content rounded-full p-4">
            <Icon name={item.icon} class="h-8 w-8" />
          </div>
        </div>

        {/* Title */}
        <div class="mb-3 text-center">
          <h3 class="text-lg font-bold">{item.title}</h3>
        </div>

        {/* Content */}
        <div class="text-base-content/80 mb-4 text-center">
          {Array.isArray(item.content) ? (
            <div class="space-y-2">
              {item.content.map((line) => (
                <p class="leading-relaxed">{line}</p>
              ))}
            </div>
          ) : (
            <p class="leading-relaxed">{item.content}</p>
          )}
        </div>

        {/* Link (if available) */}
        {item.link && (
          <div class="mt-2 text-center">
            <a
              href={item.link}
              class="text-primary-content inline-flex items-center justify-center gap-1 font-medium break-words hover:underline"
            >
              <span class="overflow-hidden break-all">
                {item.linkText || item.link}
              </span>
              <Icon name="mdi:arrow-right" class="h-4 w-4 flex-shrink-0" />
            </a>
          </div>
        )}
      </div>
    ))
  }
</div>
